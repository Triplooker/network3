channel_logo() {
  echo -e '\033[0;31m'
  echo -e 'Network3 Node Manager'
  echo -e '\e[0m'
}

restore_key() {
  echo "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á:"
  read -r private_key
  
  # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á
  mkdir -p $HOME/ubuntu-node/config
  echo "$private_key" > $HOME/ubuntu-node/config/private_key
  chmod 600 $HOME/ubuntu-node/config/private_key
  echo "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω!"
}

download_node() {
  echo '–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...'
  
  echo -e "\n–•–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á? (y/n)"
  read -r use_existing_key
  
  cd $HOME
  
  sudo apt install lsof

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
  ports=(8082 1435)
  ports_in_use=()

  for port in "${ports[@]}"; do
    if [[ $(lsof -i :"$port" | wc -l) -gt 0 ]]; then
      process=$(lsof -i :"$port" | tail -n 1)
      ports_in_use+=("$port (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: $process)")
    fi
  done

  if [ ${#ports_in_use[@]} -gt 0 ]; then
    echo -e "\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –°–ª–µ–¥—É—é—â–∏–µ –ø–æ—Ä—Ç—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è:"
    printf '%s\n' "${ports_in_use[@]}"
    echo -e "\n–≠—Ç–∏ –ø–æ—Ä—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–Ω—è—Ç—ã –¥—Ä—É–≥–∏–º–∏ –Ω–æ–¥–∞–º–∏. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞."
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç—ã –≤—Ä—É—á–Ω—É—é."
    exit 1
  fi

  sudo apt update -y && sudo apt upgrade -y
  sudo apt install screen net-tools iptables jq curl -y

  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
  sudo rm -rf ubuntu-node*
  
  wget https://network3.io/ubuntu-node-v2.1.1.tar.gz
  tar -xvf ubuntu-node-v2.1.1.tar.gz
  sudo rm -rf ubuntu-node-v2.1.1.tar.gz

  cd ubuntu-node
  
  if [[ "$use_existing_key" == "y" ]]; then
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–∞
    sudo bash manager.sh down 2>/dev/null
    
    echo "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á:"
    read -r private_key
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é wireguard –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    sudo mkdir -p /usr/local/etc/wireguard
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ
    echo "$private_key" | sudo tee /usr/local/etc/wireguard/utun.key > /dev/null
    sudo chmod 600 /usr/local/etc/wireguard/utun.key
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á –≤ ÔøΩÔøΩ–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é WireGuard
    echo "[Interface]
PrivateKey = $private_key
ListenPort = 1435" > wg0.conf
    chmod 600 wg0.conf
    
    # –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é config –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    mkdir -p config
    echo "$private_key" > config/private_key
    chmod 600 config/private_key
    
    echo "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω!"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
    cat wg0.conf
    
    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    sleep 5
  fi
  
  # –ò–∑–º–µ–Ω—è–µ–º –ø–æ—Ä—Ç—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  find . -type f -exec sed -i 's/:8080/:8082/g' {} \;
  find . -type f -exec sed -i 's/:1433/:1435/g' {} \;
}

# –î–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ screen
check_screen_status() {
  echo -e "\n–ü—Ä–æ–≤–µ—Ä—è–µ–º screen —Å–µ—Å—Å–∏–∏:"
  screen -ls | grep network3 || echo "–ê–∫—Ç–∏–≤–Ω—ã—Ö screen —Å–µ—Å—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
}

# –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é launch_node()
launch_node() {
  cd $HOME/ubuntu-node
  
  echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
  find . -type f -exec grep -l "8080\|1433" {} \; 2>/dev/null
  
  echo -e "\n–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Ä—Ç–æ–≤:"
  grep -r "8080\|8082\|1433\|1435" . 2>/dev/null
  
  echo -e "\n–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—É—Å–∫..."
  sudo bash manager.sh down
  sleep 5
  
  echo -e "\n–ò–∑–º–µ–Ω—è–µ–º –ø–æ—Ä—Ç—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
  find . -type f -exec sed -i 's/8080/8082/g' {} \;
  find . -type f -exec sed -i 's/1433/1435/g' {} \;
  
  echo -e "\n–ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É..."
  # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ screen —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º
  SCREEN_NAME="network3_$(date +%s)"
  screen -dmS $SCREEN_NAME bash -c "cd $HOME/ubuntu-node && sudo bash manager.sh up; exec bash"
  
  echo "–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ (30 —Å–µ–∫)..."
  sleep 30
  
  echo -e "\n–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å:"
  check_screen_status
  ps aux | grep -i "node" | grep -v grep
  sudo netstat -tulpn | grep -E "8082|1435"
}

stop_node() {
  cd $HOME/ubuntu-node
  echo "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É..."
  sudo bash manager.sh down
  
  # –£–±–∏–≤–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–æ—Ü–µ—Å—Å—ã
  pkill -f "manager.sh up"
  
  echo "–ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
}

# –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é check_points()
check_points() {
  my_ip=$(hostname -I | awk '{print $1}')
  
  echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–æ–¥—ã..."
  ps aux | grep -i "node" | grep -v grep
  
  check_screen_status
  
  echo -e "\n–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã..."
  sudo netstat -tulpn | grep -E "8082|1435"
  
  echo -e "\nüåê –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"
  echo "https://account.network3.ai/main?o=$my_ip:8082"
  echo -e "\n–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–∏–Ω—Ç–æ–≤"
}

check_private_key() {
  cd $HOME/ubuntu-node
  sudo bash manager.sh key
}

remove_node() {
  echo "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –Ω–æ–¥—É..."
  cd $HOME/ubuntu-node
  sudo bash manager.sh down
  
  echo "–£–±–∏–≤–∞–µ–º screen —Å–µ—Å—Å–∏–∏ network3..."
  screen -ls | grep network3 | cut -d. -f1 | xargs -I % screen -S % -X quit
  
  echo "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö..."
  sudo kill $(lsof -t -i:8082) 2>/dev/null
  sudo kill $(lsof -t -i:1435) 2>/dev/null
  
  echo "–£–¥–∞–ª—è—é –∫–ª—é—á–∏ WireGuard..."
  sudo rm -f /usr/local/etc/wireguard/utun.key
  sudo rm -f $HOME/ubuntu-node/wg0.conf
  sudo rm -f $HOME/ubuntu-node/config/private_key
  
  echo "–£–¥–∞–ª—è—é —Ñ–∞–π–ª—ã –Ω–æ–¥—ã..."
  cd $HOME
  sudo rm -rf ubuntu-node
  
  echo "–ù–æ–¥–∞ –∏ –≤—Å–µ –∫–ª—é—á–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!"
}

exit_from_script() {
  exit 0
}

while true; do
    channel_logo
    sleep 2
    echo -e "\n\n–ú–µ–Ω—é:"
    echo "1. üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
    echo "3. ‚õî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "4. üéØ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏–Ω—Ç–æ–≤"
    echo "5. üîë –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á"
    echo "6. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
    echo -e "7. ‚ùå –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞\n"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

    case $choice in
      1)
        download_node
        ;;
      2)
        launch_node
        ;;
      3)
        stop_node
        ;;
      4)
        check_points
        ;;
      5)
        check_private_key
        ;;
      6)
        remove_node
        ;;
      7)
        exit_from_script
        ;;
      *)
        echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É –≤ –º–µ–Ω—é."
        ;;
    esac
  done
